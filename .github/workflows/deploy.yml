name: Deploy Shiny App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      R_LIBS_USER: /home/runner/work/_temp/Library
      TZ: UTC
      _R_CHECK_SYSTEM_CLOCK_: FALSE
      NOT_CRAN: true
      SHINYAPPS_NAME: ${{ secrets.SHINYAPPS_NAME }}
      SHINYAPPS_TOKEN: ${{ secrets.SHINYAPPS_TOKEN }}
      SHINYAPPS_SECRET: ${{ secrets.SHINYAPPS_SECRET }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libudunits2-dev libproj-dev libgdal-dev

    - name: Install R
      uses: r-lib/actions/setup-r@v2

    - name: Install renv
      run: R -e "install.packages('renv')"

    - name: Remove INLA if installed
      run: R -e "if ('INLA' %in% rownames(installed.packages())) remove.packages('INLA')"

    - name: Initialize renv and install necessary packages
      run: |
        R -e "renv::init(bare = TRUE)"
        R -e "renv::install(c('shiny', 'sf', 'leaflet', 'viridis', 'dplyr', 'rsconnect'))"

    - name: Configure renv exclusions and snapshot
      run: |
        R -e "options(renv.config.exclusions = c('INLA'))"
        R -e "renv::snapshot()"

    - name: Check renv status
      run: R -e "status <- renv::status(); if (!status$synchronized) stop('Library and lockfile are out of sync. Please run renv::restore() or renv::snapshot().')"

    - name: Deploy Shiny App
      run: |
        Rscript -e "library(rsconnect); \
                    rsconnect::setAccountInfo(name=Sys.getenv('SHINYAPPS_NAME'), \
                                              token=Sys.getenv('SHINYAPPS_TOKEN'), \
                                              secret=Sys.getenv('SHINYAPPS_SECRET')); \
                    rsconnect::deployApp()"  
